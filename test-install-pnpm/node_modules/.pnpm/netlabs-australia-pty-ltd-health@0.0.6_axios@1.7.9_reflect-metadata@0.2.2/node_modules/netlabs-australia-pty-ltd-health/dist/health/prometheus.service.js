"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrometheusService = void 0;
const common_1 = require("@nestjs/common");
const prom_client_1 = require("prom-client");
let PrometheusService = class PrometheusService {
    constructor() {
        this.registry = new prom_client_1.Registry();
        this.healthCheckCounter = new prom_client_1.Counter({
            name: 'health_check_status',
            help: 'Health check status counter',
            labelNames: ['type', 'status'],
            registers: [this.registry],
        });
    }
    recordHealthCheck(type, status) {
        this.healthCheckCounter.labels(type, status).inc();
    }
    getMetrics() {
        return this.registry.metrics();
    }
};
exports.PrometheusService = PrometheusService;
exports.PrometheusService = PrometheusService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [])
], PrometheusService);
//# sourceMappingURL=prometheus.service.js.map